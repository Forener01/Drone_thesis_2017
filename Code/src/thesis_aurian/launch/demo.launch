<?xml version="1.0"?>
<!-- This is a sample launch file, please change it based on your needs -->
<launch>
<!-- IPv4 address of your drone -->
<arg name="ip" default="192.168.1.1"/>
<!-- Ultrasound frequency (7 or 8). -->
<arg name="freq" default="8"/>

<!-- CONTROLLER -->
<node name="demo" pkg="thesis_aurian" type="demo" output="screen">
  <param name="test_type" value="1" /> <!-- 0 without control, 1 vel control, 2 pose control-->
  <param name="path_type" value="6" /> <!-- 0 for straightline, 1 for a square, 2 for static, 3 for left line, 4 for exit the room, 5 for final demo, 6 for cam demo -->
  <param name="the_speed" value="0.3" /> <!-- setting the speed (m/s) -->
  <param name="the_sleeptime" value="5.0" /> <!-- setting the sleeptime (s) -->
  <param name="the_hovertime" value="5.0" /> <!-- setting the hovertime -->
</node>

<!--
<node name="pose_controller" pkg="ardrone_velocity_ekf" type="pose_controller" output="screen">
</node>-->

<!-- <include file="$(find robot_localization)/launch/ardrone_ekf.launch"/>

<node pkg="robot_localization" type="ping_node" name="ping_node" clear_params="true">
</node>

<node pkg="ardrone_velocity_ekf" type="run_control" name="ardrone_velocity_ekf" output="screen" clear_params="true">
  <param name="cmd_vel_ref_topic" value="/cmd_vel_ref" />
  <param name="cmd_vel_out_topic" value="/cmd_vel" />
</node> -->

<node name="ardrone_driver" pkg="ardrone_autonomy" type="ardrone_driver" clear_params="true" args="-ip $(arg ip)">
  <param name="outdoor" value="0" />
  <param name="max_bitrate" value="4000" />
  <param name="bitrate" value="4000" />
  <param name="navdata_demo" value="0" />
  <param name="flight_without_shell" value="0" />
  <param name="altitude_max" value="4000" />
  <param name="altitude_min" value="50" />
  <param name="euler_angle_max" value="0.21" />
  <param name="control_vz_max" value="700" />
  <param name="control_yaw" value="1.75" />
  <!-- <param name="detect_type" value="10" />
  <param name="enemy_colors" value="3" /> -->
  <!-- <param name="detections_select_h" value="32" />
  <param name="detections_select_v_hsync" value="128" />
  <param name="enemy_without_shell" value="0" /> -->
  <param name="ultrasound_freq" value="$(arg freq)" />
  <param name="realtime_navdata" value="true" />
  <param name="realtime_video" value="true" />
  <!-- Covariance Values (3x3 matrices reshaped to 1x9)-->
  <rosparam param="cov/imu_la">[0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1]</rosparam>
  <rosparam param="cov/imu_av">[1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0]</rosparam>
  <rosparam param="cov/imu_or">[1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 100000.0]</rosparam>

</node>

<!-- COMPUTER VISION -->
<group ns="ardrone/front">
  <node name="image_proc" pkg="image_proc" type="image_proc" output="screen" >
  <param name="queue_size" value="1" />
</node> 
</group>

<node name="image_view_calib" pkg="image_view" type="image_view" respawn="false" output="screen">
<remap from="image" to="ardrone/front/image_rect_color" />
</node>

<node name="reference_doors" pkg="thesis_aurian" type="refdoors" respawn="false" output="screen">
</node>


<node name="image_view_filt" pkg="image_view" type="image_view" respawn="false" output="screen">
<remap from="image" to="filtdoor_image" />
</node>

<node name="image_view_realbin" pkg="image_view" type="image_view" respawn="false" output="screen">
<remap from="image" to="realbindoor_image" />
</node>

<node name="image_view_match_door" pkg="image_view" type="image_view" respawn="false" output="screen">
<remap from="image" to="matchdoor_image" />
</node>

<node name="image_view_match_space" pkg="image_view" type="image_view" respawn="false" output="screen">
<remap from="image" to="matchspace_image" />
</node>

</launch>